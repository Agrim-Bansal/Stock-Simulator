to start off, I think auth will be it.
I want to do both of the things - making and using accounts saved in my own db. as well as oauth with google...

but i think i'll implement them later and just let variables work for the beginning.
IG I'll use shadcn for the ui, that seemed quite nice. So let it roll..
https://ui.shadcn.com
https://ui.shadcn.com/docs

I'm thinking coolors.co for a color pallete although i do like the black-white theme default for shadcn/ui

I found ready made login page on shadcn/ui so i'm just gonna put that and get done with it.

I'm kinda stuck at checking if logged in or not. I thought about using state for that and router.push to /login page but that is throwing an error and that might cause a problem.
solved it. I just needed to forgo the state and redirect from within the useEffect function.

Okay, so the password workflow seems really complicated to build and implement. therefore, I am going to put that off and instead, start off with the actual stock simulator platform

Yesterday I finished off with the sidebar save a little bit of fine tuning. Now I'm a bit confused with the structuring of data which is compatible with authentication. So, what i'm thinking is maybe i'll go and implement auth first.
Now for auth I am confused as to firebase or auth0 but since i'm going with firestore, so ig i'll just go ahead with firebase.

export default function handler(req, res) {
  res.status(200).json({ message: 'Hello from Next.js!' })
}
handling of https reequest - apis in nextjs

I kinda implemented the sign in and sign up with nextjs api ig. I'm not sure how that'll work. I'll see if i move it over to the login page itself.

Yaay. I'm done with authentication completely although a little stuff is left to implement on the account page 
- reset password, delete account, change email and also to setup a forgot password page.

Currently I think i will just make the research page with the following abilities and features :
- trending stocks carousel, a table with a list of popular stocks, a search option.

It is getting difficult to get a chart for the trending stocks carousel, and i need to design the search box part, the table is also wierd

Ig I'll work on the other pages first then.
Starting off with Account page - this has no relation to stocks and should be good enough to implement.
just diplay email, name and have an option to change password and delete account.
Also make a forgot password page accessible via link.

remember todo 
copy layout file from account page to all the other ones

ok. so i have set up the popular tickers although those are selected manually and fetched everytime. that is definitely going to run out of quota from the api. so Ig i'll store them in my own database for each day and fetch from there.
also i am actively looking for another api for the stocks. the one for logo is good though.
and i did make logging in good enough if not logged in on the account page. although account page itself for logged in users is left to be done.

---------------------------------

it's been a long time since my last update and whatever ...
At this point I have implemented all of the account functions - page / info display / reset password / forgot password / update name and stuff /  
and am at the stage of focusing on the stocks part going forward. There's been some issues like wrapping useSearchParams in a suspense element, typescript has been a pain, and umm.. a bit of figuring out which part evaluates and when.
onwards, i need to implement the table for all tickers. 
a popup containing the stock info . -- this all on the research page.

portfolio / trade / watchlist are still to be implemented.

but ig they'll all start to fall into place once I do find a god damn api. It's been a huge problem finding a good enough api for the information.

alphavantage seemed to be perfect but it has got a really constricted request limit.
api ninja just doesn't have all the info but could help reduce the load from alphavantage. so i'm holding on.
and finnhub also doesn't have historical data. 
Alpaca api seems a good candidate for the api with 200req/minutes.

-----------------------------------

Well, I had to write a script to get the data i need in the format i need as the apis were simply not cutting it. Now it is collecting the data and savinig into excel which i'll convert to json and work with.

yay, I've completed the data table. although prices need to be fed in, but that's alright.

and now trading, watchlist and portfolio need to be done. these and prices, umm yeah- active ticker - like a popup.

I can foresee the designing is going to be problematic and for graphs, I am most probably going to use chatjs library and plot the graphs.
and like in the inspiration, I might want to add the ummmmmmm..... yeah, the label following the mouse on chart displaying price corresponding to dates and time but seems difficult.
also i need to figure the data structure for the transactions.
It seems a collection within a collection is not allowed. i was banking on transations > userID > trades and sim for watchlist
so it seems as if i should go transactions-<userID> > trades . meh. will figure it out. 

----------------------------------------

today, i believe that what has to happen will find its way. By total chance, i attended a trading workshop and discovered trading view.
I think it will completely totally handle my graphing problem by embedding a chart and just being done with it.
I'll do that tomorrow though. 

-----------------------------------------

hey. it's a new day. today i kinda sorta spent my time in the shipathon thing. so i logged relatively less amount of hours.
but i did manage to finalise all the stuff related to trade page ( I hope so). I've pretty much implemented all. 
What is left to do is to do a bit of testing on buying - selling of the stock and to figure out the part about shorting the stocks.
It goes to say that the database structure also just came out by itself -
for portfolios, it is simply portfolios/{uid} and stores two fields : money as in liquid balance and stocks as in holding with qty.
for trades i went {uid}-trades/{dateTime of the trade}. Now I need to implement the main home page with profit/loss of the account.
going over all trades and showing holdings and everything.

--------------------

ahh. this is it. I think i've done just about all of it. tho i'm asking for feedbacks and that may take some bit of time but well yeah. I'm finally doneee.
I need to write documentation, readme, user guide and the project journey - it certainly has been wierd.

So what the hell. let's gooo!!
